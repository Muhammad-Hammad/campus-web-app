[{"D:\\Project\\campus-web-app\\src\\reportWebVitals.js":"1","D:\\Project\\campus-web-app\\src\\components\\app\\index.js":"2","D:\\Project\\campus-web-app\\src\\redux\\reducers\\auth.js":"3","D:\\Project\\campus-web-app\\src\\components\\signup\\index.js":"4","D:\\Project\\campus-web-app\\src\\components\\Root.js":"5","D:\\Project\\campus-web-app\\src\\firebase\\index.js":"6","D:\\Project\\campus-web-app\\src\\components\\ShowJobs\\JobCard.js":"7","D:\\Project\\campus-web-app\\src\\routes\\index.js":"8","D:\\Project\\campus-web-app\\src\\components\\signin\\index.js":"9","D:\\Project\\campus-web-app\\src\\redux\\actions\\index.js":"10","D:\\Project\\campus-web-app\\src\\components\\AddJob\\index.js":"11","D:\\Project\\campus-web-app\\src\\lib\\index.js":"12","D:\\Project\\campus-web-app\\src\\components\\forgotPassword\\index.js":"13","D:\\Project\\campus-web-app\\src\\components\\Error.js":"14","D:\\Project\\campus-web-app\\src\\components\\appbar\\index.js":"15","D:\\Project\\campus-web-app\\src\\components\\ShowJobs\\index.js":"16","D:\\Project\\campus-web-app\\src\\components\\dashboard\\index.js":"17","D:\\Project\\campus-web-app\\src\\components\\loader\\index.js":"18","D:\\Project\\campus-web-app\\src\\redux\\constants\\index.js":"19"},{"size":362,"mtime":1610449489816,"results":"20","hashOfConfig":"21"},{"size":1555,"mtime":1612202871477,"results":"22","hashOfConfig":"21"},{"size":5521,"mtime":1612197846898,"results":"23","hashOfConfig":"21"},{"size":7648,"mtime":1612191214890,"results":"24","hashOfConfig":"21"},{"size":460,"mtime":1612176968615,"results":"25","hashOfConfig":"21"},{"size":449,"mtime":1612184943329,"results":"26","hashOfConfig":"21"},{"size":1437,"mtime":1612031679993,"results":"27","hashOfConfig":"21"},{"size":2907,"mtime":1612203217172,"results":"28","hashOfConfig":"21"},{"size":7154,"mtime":1612199073430,"results":"29","hashOfConfig":"21"},{"size":5346,"mtime":1612185194456,"results":"30","hashOfConfig":"21"},{"size":0,"mtime":1612184627592,"results":"31","hashOfConfig":"21"},{"size":1209,"mtime":1612026846541,"results":"32","hashOfConfig":"21"},{"size":4914,"mtime":1612191250194,"results":"33","hashOfConfig":"21"},{"size":582,"mtime":1612198948608,"results":"34","hashOfConfig":"21"},{"size":1271,"mtime":1612196304273,"results":"35","hashOfConfig":"21"},{"size":194,"mtime":1612031685206,"results":"36","hashOfConfig":"21"},{"size":1183,"mtime":1612199283006,"results":"37","hashOfConfig":"21"},{"size":473,"mtime":1612031551171,"results":"38","hashOfConfig":"21"},{"size":1095,"mtime":1612030799312,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ul92yb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\campus-web-app\\src\\reportWebVitals.js",[],["90","91"],"D:\\Project\\campus-web-app\\src\\components\\app\\index.js",["92","93","94","95","96","97","98","99","100","101","102"],"D:\\Project\\campus-web-app\\src\\redux\\reducers\\auth.js",[],"D:\\Project\\campus-web-app\\src\\components\\signup\\index.js",["103","104"],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { SignupSchema } from \"../../lib\";\r\nimport Loading from \"../loader\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { signupUser } from \"../../redux/actions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n// const regex = /[^A-Za-z]/gi;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    fontFamily: \"monospace\",\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  let initialValues = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"Student\",\r\n  };\r\n  const state = useSelector((state) => state.auth);\r\n  let { signup, login, userName } = state;\r\n  let str = userName?.replace(/\\s+/g, \"-\").toLowerCase();\r\n\r\n  const handleSubmit = (e, { resetForm }) => {\r\n    dispatch(signupUser(e.userName, e.email, e.password, e.role));\r\n    resetForm({\r\n      values: {\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"Student\",\r\n      },\r\n    });\r\n  };\r\n\r\n  if (signup.success || login.success) {\r\n    if (str === undefined) {\r\n      return <Loading />;\r\n    } else {\r\n      return <Redirect to={`/dashboard`} />;\r\n    }\r\n  } else {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={SignupSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ values, errors, handleChange, touched, isValid, dirty }) => (\r\n              <Form className={classes.form}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={\r\n                      Boolean(errors.userName) && Boolean(touched.userName)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    required\r\n                    value={values.userName}\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"UserName\"\r\n                    name=\"userName\"\r\n                    autoComplete=\"userName\"\r\n                    helperText={\r\n                      errors.userName && touched.userName\r\n                        ? errors.userName\r\n                        : null\r\n                    }\r\n                    onFocus={() => {\r\n                      signup.errorMsg = \"\";\r\n                      touched.userName = \"\";\r\n                    }}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={Boolean(errors.email) && Boolean(touched.email)}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    value={values.email}\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : null\r\n                    }\r\n                    onFocus={() => {\r\n                      signup.errorMsg = \"\";\r\n                      touched.email = \"\";\r\n                    }}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={\r\n                      Boolean(errors.password) && Boolean(touched.password)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    value={values.password}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    helperText={\r\n                      errors.password && touched.password\r\n                        ? errors.password\r\n                        : null\r\n                    }\r\n                    onFocus={() => {\r\n                      signup.errorMsg = \"\";\r\n                      touched.password = \"\";\r\n                    }}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n                {signup.error && (\r\n                  <Alert severity=\"error\">{signup.errorMsg}</Alert>\r\n                )}\r\n                <br />\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Role</FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"role\"\r\n                    name=\"role\"\r\n                    required\r\n                    value={values.role}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Company\"\r\n                      control={<Radio />}\r\n                      label=\"Company\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  disabled={!dirty}\r\n                >\r\n                  {!signup.loading ? \"Sign Up\" : <Loading size={24} />}\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link href=\"/\" variant=\"body2\">\r\n                      Already have an account? Sign in\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n",["105","106"],"D:\\Project\\campus-web-app\\src\\components\\Root.js",[],["107","108"],"D:\\Project\\campus-web-app\\src\\firebase\\index.js",[],"D:\\Project\\campus-web-app\\src\\components\\ShowJobs\\JobCard.js",["109"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    maxWidth: 300,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard({ name, title, experience, desc }) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {experience}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {desc}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Apply here</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n",["110","111"],"D:\\Project\\campus-web-app\\src\\routes\\index.js",["112","113","114","115","116"],"D:\\Project\\campus-web-app\\src\\components\\signin\\index.js",["117","118","119","120"],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../../redux/actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Loader from \"../loader\";\r\nimport { Form, Formik } from \"formik\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { SigninSchema } from \"../../lib\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"green\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nfunction Signin() {\r\n  // let [newEmail, setEmail] = useState(\"\");\r\n  // let [newPassword, setPassword] = useState(\"\");\r\n  let initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"Student\",\r\n  };\r\n  const state = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    dispatch(loginUser(values.email, values.password, values.role));\r\n    resetForm({\r\n      values: {\r\n        email: \"\",\r\n        password: \"\",\r\n        role: values.role,\r\n      },\r\n    });\r\n  };\r\n\r\n  const { login, signup, userName, getData } = state;\r\n  let str = userName?.replace(/\\s+/g, \"-\").toLowerCase();\r\n  console.log(\"getdata\", getData.loading);\r\n  const classes = useStyles();\r\n  if (login.success || signup.success) {\r\n    return <Redirect to={`/dashboard`} />;\r\n  } else {\r\n    // debugger;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign In\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={SigninSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ values, errors, handleChange, touched, isValid, dirty }) => (\r\n              <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      error={Boolean(errors.email) && Boolean(touched.email)}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      value={values.email}\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      helperText={\r\n                        errors.email && touched.email ? errors.email : null\r\n                      }\r\n                      onFocus={() => {\r\n                        login.error = false;\r\n                        touched.email = \"\";\r\n                      }}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      error={\r\n                        Boolean(errors.password) && Boolean(touched.password)\r\n                      }\r\n                      variant=\"outlined\"\r\n                      value={values.password}\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      helperText={\r\n                        errors.password && touched.password\r\n                          ? errors.password\r\n                          : null\r\n                      }\r\n                      onFocus={() => {\r\n                        login.error = false;\r\n                        touched.password = \"\";\r\n                      }}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                {login.error && !values.email && (\r\n                  // <Typography component=\"p\" className={classes.errorText}>\r\n                  //   {login.errorMsg}\r\n                  // </Typography>\r\n                  <Alert severity=\"error\">{login.errorMsg}</Alert>\r\n                )}\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Role</FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"role\"\r\n                    name=\"role\"\r\n                    required\r\n                    value={values.role}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"Student\"\r\n                      control={<Radio />}\r\n                      label=\"Student\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"Company\"\r\n                      control={<Radio />}\r\n                      label=\"Company\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  disabled={!dirty}\r\n                >\r\n                  {!login.loading ? \"Sign in\" : <Loader />}\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item xs>\r\n                    <Link href=\"/forgotPassword\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link href=\"/signup\" variant=\"body2\">\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","D:\\Project\\campus-web-app\\src\\redux\\actions\\index.js",["121","122","123"],"D:\\Project\\campus-web-app\\src\\components\\AddJob\\index.js",[],["124","125"],"D:\\Project\\campus-web-app\\src\\lib\\index.js",[],"D:\\Project\\campus-web-app\\src\\components\\forgotPassword\\index.js",[],["126","127"],"D:\\Project\\campus-web-app\\src\\components\\Error.js",[],"D:\\Project\\campus-web-app\\src\\components\\appbar\\index.js",["128","129"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n\r\n    return <Redirect to=\"/\" />;\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.routeName}\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appbar;\r\n","D:\\Project\\campus-web-app\\src\\components\\ShowJobs\\index.js",[],["130","131"],"D:\\Project\\campus-web-app\\src\\components\\dashboard\\index.js",["132","133","134","135","136","137","138","139","140"],"D:\\Project\\campus-web-app\\src\\components\\loader\\index.js",["141"],"import { useState } from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  //   border-color: red;\r\n`;\r\n\r\nfunction Loader(props) {\r\n  return (\r\n    <div>\r\n      <PuffLoader loading={props.loading} css={override} size={props.size} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","D:\\Project\\campus-web-app\\src\\redux\\constants\\index.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"150","line":3,"column":18,"nodeType":"148","messageId":"149","endLine":3,"endColumn":23},{"ruleId":"146","severity":1,"message":"151","line":3,"column":25,"nodeType":"148","messageId":"149","endLine":3,"endColumn":33},{"ruleId":"146","severity":1,"message":"152","line":5,"column":18,"nodeType":"148","messageId":"149","endLine":5,"endColumn":36},{"ruleId":"146","severity":1,"message":"153","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":14},{"ruleId":"146","severity":1,"message":"154","line":10,"column":9,"nodeType":"148","messageId":"149","endLine":10,"endColumn":14},{"ruleId":"146","severity":1,"message":"155","line":10,"column":16,"nodeType":"148","messageId":"149","endLine":10,"endColumn":22},{"ruleId":"146","severity":1,"message":"156","line":10,"column":30,"nodeType":"148","messageId":"149","endLine":10,"endColumn":36},{"ruleId":"146","severity":1,"message":"157","line":10,"column":38,"nodeType":"148","messageId":"149","endLine":10,"endColumn":45},{"ruleId":"158","severity":1,"message":"159","line":14,"column":6,"nodeType":"160","endLine":14,"endColumn":12,"suggestions":"161"},{"ruleId":"146","severity":1,"message":"162","line":17,"column":7,"nodeType":"148","messageId":"149","endLine":17,"endColumn":12},{"ruleId":"146","severity":1,"message":"163","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"164","line":9,"column":13,"nodeType":"148","messageId":"149","endLine":9,"endColumn":16},{"ruleId":"142","replacedBy":"165"},{"ruleId":"144","replacedBy":"166"},{"ruleId":"142","replacedBy":"167"},{"ruleId":"144","replacedBy":"168"},{"ruleId":"146","severity":1,"message":"169","line":28,"column":9,"nodeType":"148","messageId":"149","endLine":28,"endColumn":13},{"ruleId":"142","replacedBy":"170"},{"ruleId":"144","replacedBy":"171"},{"ruleId":"146","severity":1,"message":"151","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"153","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":14},{"ruleId":"146","severity":1,"message":"156","line":96,"column":11,"nodeType":"148","messageId":"149","endLine":96,"endColumn":17},{"ruleId":"146","severity":1,"message":"154","line":96,"column":19,"nodeType":"148","messageId":"149","endLine":96,"endColumn":24},{"ruleId":"146","severity":1,"message":"155","line":96,"column":26,"nodeType":"148","messageId":"149","endLine":96,"endColumn":32},{"ruleId":"146","severity":1,"message":"163","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"172","line":21,"column":8,"nodeType":"148","messageId":"149","endLine":21,"endColumn":13},{"ruleId":"146","severity":1,"message":"173","line":59,"column":9,"nodeType":"148","messageId":"149","endLine":59,"endColumn":16},{"ruleId":"146","severity":1,"message":"174","line":72,"column":7,"nodeType":"148","messageId":"149","endLine":72,"endColumn":10},{"ruleId":"146","severity":1,"message":"175","line":123,"column":7,"nodeType":"148","messageId":"149","endLine":123,"endColumn":20},{"ruleId":"146","severity":1,"message":"176","line":128,"column":7,"nodeType":"148","messageId":"149","endLine":128,"endColumn":20},{"ruleId":"146","severity":1,"message":"177","line":134,"column":7,"nodeType":"148","messageId":"149","endLine":134,"endColumn":18},{"ruleId":"142","replacedBy":"178"},{"ruleId":"144","replacedBy":"179"},{"ruleId":"142","replacedBy":"180"},{"ruleId":"144","replacedBy":"181"},{"ruleId":"146","severity":1,"message":"182","line":1,"column":23,"nodeType":"148","messageId":"149","endLine":1,"endColumn":34},{"ruleId":"146","severity":1,"message":"173","line":23,"column":7,"nodeType":"148","messageId":"149","endLine":23,"endColumn":14},{"ruleId":"142","replacedBy":"183"},{"ruleId":"144","replacedBy":"184"},{"ruleId":"146","severity":1,"message":"185","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":21},{"ruleId":"146","severity":1,"message":"182","line":2,"column":23,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"186","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"187","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":14},{"ruleId":"146","severity":1,"message":"188","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":15},{"ruleId":"146","severity":1,"message":"189","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":18},{"ruleId":"146","severity":1,"message":"190","line":22,"column":9,"nodeType":"148","messageId":"149","endLine":22,"endColumn":16},{"ruleId":"146","severity":1,"message":"191","line":23,"column":9,"nodeType":"148","messageId":"149","endLine":23,"endColumn":13},{"ruleId":"146","severity":1,"message":"192","line":23,"column":15,"nodeType":"148","messageId":"149","endLine":23,"endColumn":18},{"ruleId":"146","severity":1,"message":"163","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":18},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Redirect' is defined but never used.","'RouteWithSubRoutes' is defined but never used.","'Loader' is defined but never used.","'login' is assigned a value but never used.","'signup' is assigned a value but never used.","'verify' is assigned a value but never used.","'getData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'check' is assigned a value but never used.","'useState' is defined but never used.","'yup' is defined but never used.",["193"],["194"],["193"],["194"],"'bull' is assigned a value but never used.",["193"],["194"],"'Paper' is defined but never used.","'history' is assigned a value but never used.","'str' is assigned a value but never used.","'requestAddJob' is assigned a value but never used.","'receiveAddJob' is assigned a value but never used.","'AddJobError' is assigned a value but never used.",["193"],["194"],["193"],["194"],"'useSelector' is defined but never used.",["193"],["194"],"'useDispatch' is defined but never used.","'logoutUser' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch, user]",{"range":"198","text":"199"},[566,572],"[dispatch, user]"]